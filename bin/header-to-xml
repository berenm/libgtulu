#!/usr/bin/env python

import parser

def main():
    from optparse import OptionParser, OptionGroup
    global opts

    opt = OptionParser("usage: %prog [-u] [-I INCLUDE_PATH]... [-D DEFINE[=VALUE]]... [-o OUTPUT] -i FILE")
    opt.add_option("-u", "--uncrustify", dest="uncrustify", action='store_true', default=False,
                   help="Run uncrustify ~/.uncrustifyrc on the generated file to format the source.")
    opt.add_option("-I", dest="include_paths", action='append', default=[],
                   help="Include paths to add to parse FILE.")
    opt.add_option("-D", dest="defines", action='append', default=[],
                   help="Preprocessor definitions to add to parse FILE.")
    opt.add_option("-i", "--input", dest="input",
                   help="Input file to parse.")
    opt.add_option("-o", "--output", dest="output",
                   help="Output file to generate from FILE.")
    (opts, args) = opt.parse_args()

    if opts.input is None:
        opt.error('missing FILE')

    filename = opts.input
    target = opts.output

    command_line = ['generate']
    command_line.append('-i ' + filename)

    if target is None:
        target = filename.replace('.h', '_autogen.h')
    else:
        command_line.append('-o ' + target)

    command_line.extend(['-I ' + i for i in opts.include_paths])
    command_line.extend(['-D ' + d for d in opts.defines])

    print parser.FileFilteringIndexer(filename, opts.include_paths, opts.defines)

if __name__ == '__main__':
    main()
